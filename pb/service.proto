syntax = "proto3";

package service;
import "google/protobuf/struct.proto";
option go_package = "/service";

// 这个是layer端的服务协议
service Coordinator {
  // Commit 节点向Coordinator返回自己已经完成的Task Slot
  rpc CommitSlot (SlotCommitRequest) returns (SlotCommitResponse);
}

// 这个是节点端的服务协议
service NodeExecutor{
  // Heartbeat 向follower同步slot状态，同时监控节点状态
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);

  // Schedule 用于向节点发送调度
  rpc Schedule(ScheduleRequest) returns (ScheduleResponse);
  // 投票包含在heartbeat里
  //  // EpochVote 投票epoch，用于上链
  //  rpc EpochVote (EpochVoteRequest) returns (EpochVoteResponse);
}

// 定义 JustifiedSlot 消息
message JustifiedSlot {
  int32 nid = 1;          // 节点ID
  int32 process = 2;      // 进程ID
  string sign = 3;        // 签名
  int32 slot = 4;         // 槽位ID
  int32 epoch = 5;        // 提交的epoch
  // state字段省略
}

// Heartbeat request message
message HeartbeatRequest {
  repeated JustifiedSlot commits = 1;     // 提交的CommitSlotItem列表
  repeated JustifiedSlot finalizes = 2;   // 完成的CommitSlotItem列表
  map<string, int32> tasks = 3;            // 在这个epoch中过期的任务的最新slot
  int32 epoch = 4;
}

// Heartbeat response message

message HeartbeatResponse {
  int32 nodeId = 1;               // 节点id
  map<string, string> nodeStatus = 2; // 节点状态，这里先不管，可以加点cpu利用率、内存啥的
  repeated Vote votes = 3; // 投票
}

// EpochVote response message
message Vote {
  JustifiedSlot slot = 1; // 投票针对的内容
  int32 nodeId = 2;           // Node ID of the sender
  bool state = 3; // 是否同意
  string desp = 4; // 原因
}

message ScheduleRequest {
  string sign = 1; // 任务标记
  string slot = 2;
  int32 size = 3; // 数据总量
  map<string, int32> schedule = 4; // 分配，节点id: 数据量
  string model = 5; // 模型名称
  // 用于得到model params
  google.protobuf.Struct params = 6;       // Dynamic details, accepts JSON-like structures
}
message ScheduleResponse {
  bool accept = 1; // 是否同意该调度
  string nodeId = 2;
  string sign = 3;
  string errorMessage = 4; // 拒绝的理由
}

message SlotCommitRequest {
  string nodeId = 1;
  string sign = 2;
  string slot = 3;
  int32 size = 4;
  string errorMessage = 5;// 可能有一些说明，比如没有完全完成
}
message SlotCommitResponse {
  string valid = 1; // 你的提交是否合法，给个枚举
  string sign = 2; //
  string slot = 3; // 合法的slot
}